<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 376.3 402.4" onload="Start(evt)">

	<path fill="white" stroke="#d5eaef" stroke-width="13" stroke-miterlimit="10" d="M186.1 6.9L7 69.8l25.3 239.5L188.1 395 340 309.3l29.2-239.5z"/>

	<path id="stroke" fill="none" stroke="#d5eaef" stroke-width="13" stroke-miterlimit="10" d="M186.1 6.9L7 69.8l25.3 239.5L188.1 395 340 309.3l29.2-239.5z"/>

	<path id="head-base" fill="#d5eaef" d="M280.1 209.8c.4-10.4-19.1-25.2-15.6-39.5 3.5-14.3 3-27.8-4.8-46.6 0 0 12.6 4.9 11.3-4.8-1.3-9.7-15.2-19.9-25.6-26.4-4.7-2.9-17.5-9.2-34.7-12.9l-3.2 8.8c.7.3 10.5 4.7 14.6 8.9l3.3-4.5s19.2 10.4 25.1 33.4l-5.1 1.7v-.1c.4 1.4 5.8 19.5-.3 39.5l-14-4.7c-.7 1.9-7.8 19.6-17.2 22.7l-8.8-11.6c-4.2 3.3-13.9 6.2-18.5 4.9v-.4h-.2l.3 32.1c-18.5 1.9-40.6-9.3-51.2-24.7l-11.6 8.8c-13.2-15.9-15.2-35.1-15.3-46.1H124c0-12.2 4.8-28.1 11.5-36.9l12.2 8.6c1-1.2 10.2-12.2 22.5-16.2.1 0 .1 0 .2-.1L161 79.3c-8.6 1.9-17.4 5-26.1 9.6-70.1 37.3-34.5 110.2-12.8 127.6 21.7 17.4 11.7 52.7 0 84.7h94.2c1.3-6 .2 3 4.6-21 4.4-23.9 21.3-15 34.6-15.8 13.3-.8 11.2-10.1 11.1-20.5 6.5-2.9 6.5-6 2.2-9.8 5.6-5.2 4.8-5.2 1.7-10.3-3-5.1-.9-7.5-.9-7.5s9.2-1.7 10.5-6.5z"/>

	<path id="head-top" fill="#d5eaef" stroke="#d5eaef" stroke-width="2" stroke-miterlimit="10" d="M161.1 79.5c18.3-5.3 32.2-5.5 47.7.3.6.2 1.1.5 1.5.8l3.2-7.2c-25.7-12.5-55.2-1-55.2-1l2.8 7.1"/>

	<circle id="circle" fill="#d5eaef" stroke="#d5eaef" stroke-width="2" stroke-miterlimit="10" cx="185.7" cy="140.4" r="14.5"/>

	<script xmlns="http://www.w3.org/2000/svg" type="text/ecmascript">
		<![CDATA[
		var path, headbase, headtop, circle, pathLength;

		var ms_ie = false;
		var ua = window.navigator.userAgent;

		if ((ua.indexOf('MSIE ') > -1) || (ua.indexOf('Trident/') > -1) || (ua.indexOf('Edge/') > -1)) {
			ms_ie = true;
		}

		function animate(){
			path.style.transition = path.style.WebkitTransition = 'none';

			// Trigger a layout so styles are calculated & the browser
			// picks up the starting position before animating
			path.getBoundingClientRect();

			if (ms_ie) {
				window.requestAnimationFrame(fadeInRest);
			} else {

				// Set up the starting positions
				path.style.strokeDasharray = pathLength + ' ' + pathLength;
				path.style.strokeDashoffset = pathLength;
				path.style.stroke = "#33aacc"

				var fillBorderStart;
				var fillBorderTime = 4500;

				function fillBorder(timestamp) {
					if (!fillBorderStart) fillBorderStart = timestamp;
					var progress = timestamp - fillBorderStart;
					path.style.strokeDashoffset = ((1 - progress/fillBorderTime) * pathLength);

					if (progress < fillBorderTime) {
						window.requestAnimationFrame(fillBorder);
					} else {
						window.requestAnimationFrame(fadeInRest);
					}
				}

				window.requestAnimationFrame(fillBorder);
			}

			function rgb2hex(color) {
				var hex = [];
				for (var i = 0; i < 3; i++) {
					hex.push(color[i].toString(16));
					if (hex[i].length < 2) { hex[i] = "0" + hex[i]; }
				}
				return "#" + hex[0] + hex[1] + hex[2];
			}

			function calculateDistance(current, next) {
				var distance = [];
				for (var i = 0; i < 3; i++) {
					distance.push(Math.abs(current[i] - next[i]));
				}
				return distance;
			}

			var fadeInStart;
			var fadeInTime = 500;

			var beginColors = [213, 234, 239];
			var endColors = [51, 170, 204];

			function fadeInRest(timestamp) {
				if (!fadeInStart) fadeInStart = timestamp;
				var progress = timestamp - fadeInStart;
				var currentColor = [];

				for (var i = 0; i < 3; i++) {
					currentColor.push(Math.floor(beginColors[i] + ((progress/fadeInTime) * (endColors[i] - beginColors[i]))));
				}
				var rgbColor = rgb2hex(currentColor);

				headbase.style.fill = rgbColor;
				headtop.style.fill = rgbColor;
				headtop.style.stroke = rgbColor;
				circle.style.fill = rgbColor;
				circle.style.stroke = rgbColor;
				if (ms_ie) {
					path.style.stroke = rgbColor;
				}

				if (progress < fadeInTime) {
					window.requestAnimationFrame(fadeInRest);
				} else {
					setTimeout(function() {
						window.requestAnimationFrame(fadeOut);
					}, 1000);
				}
			}

			var fadeOutStart;
			var fadeOutTime = 500;

			function fadeOut(timestamp) {
				if (!fadeOutStart) fadeOutStart = timestamp;
				var progress = timestamp - fadeOutStart;
				var currentColor = [];

				for (var i = 0; i < 3; i++) {
					currentColor.push(Math.floor(endColors[i] + ((progress/fadeOutTime) * (beginColors[i] - endColors[i]))));
				}
				var rgbColor = rgb2hex(currentColor);

				headbase.style.fill = rgbColor;
				headtop.style.fill = rgbColor;
				headtop.style.stroke = rgbColor;
				circle.style.fill = rgbColor;
				circle.style.stroke = rgbColor;
				path.style.stroke = rgbColor;


				if (progress < fadeOutTime) {
					window.requestAnimationFrame(fadeOut);
				} else {
					setTimeout(animate, 1);
				}
			}
		}

		function Start(evt) {
			if(typeof(window.requestAnimationFrame) !== 'function') {
				return;
			}
			path = evt.target.ownerDocument.getElementById("stroke");
			headbase = evt.target.ownerDocument.getElementById("head-base");
			headtop = evt.target.ownerDocument.getElementById("head-top");
			circle = evt.target.ownerDocument.getElementById("circle");
			pathLength = path.getTotalLength();
			animate();
		}
		]]>
	</script>

</svg>